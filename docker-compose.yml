version: '3.8'

services:
  catalogdb:
    image: postgres
    container_name: catalogdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CatalogDb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_catalog:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  basketdb:
    image: postgres
    container_name: basketdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=basketdb
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres_basket:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  distributedcache:
    image: redis
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
  orderdb:
    image: mcr.microsoft.com/mssql/server
    container_name: orderdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Password123!
    restart: always
    ports:
      - "1433:1433"

  catalog.api:
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.Api/Dockerfile
    image: catalogapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ConnectionStrings__DatabaseConnection=Host=catalogdb;Port=5432;Database=CatalogDb;Username=postgres;Password=postgres
    depends_on:
      catalogdb:
        condition: service_healthy
    ports:
      - "5000:5000"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  basket.api:
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.Api/Dockerfile
    image: basketapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Database=Host=basketdb;Port=5432;Database=basketdb;Username=postgres;Password=postgres  
      - ConnectionStrings__Redis=distributedcache:6379,abortConnect=false
      - GrpcSettings__DiscountUrl=http://discount.grpc:8080
    depends_on:
      basketdb:
        condition: service_healthy
      distributedcache:
        condition: service_healthy
    ports:
      - "6001:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  discount.grpc:
    image: discountgrpc
    build:
      context: .
      dockerfile: src/Services/Discount/Discount.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Database=Data Source=discountdb
    ports:
      - "6002:8080"
volumes:
  postgres_catalog:
  postgres_basket:
